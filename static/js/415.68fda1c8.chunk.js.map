{"version":3,"file":"static/js/415.68fda1c8.chunk.js","mappings":"4WAEAA,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAgB,kCAChBC,EAAgB,kCAEvBC,EAEG,QAIHC,EACC,MAGDC,EACK,QAIJ,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,gGAA4BC,EAA5B,EAA4BA,KAC3BC,EAAe,IAAIC,gBAAgB,CACvCT,QAAAA,EACAO,KAAAA,EACAF,SAAUA,IAJP,SAMkBN,IAAAA,IAAA,mBACTI,EADS,YACUC,EADV,YAC2BI,IAP7C,cAMCE,EAND,yBASEA,EAASC,MATX,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,gGAAgCC,EAAhC,EAAgCA,QAC/BC,EAAU,IAAIL,gBAAgB,CAClCT,QAAAA,EACAK,SAAUA,IAHP,SAKkBN,IAAAA,IAAA,UAAaI,EAAb,YAAgCU,EAAhC,YAA2CC,IAL7D,cAKCJ,EALD,yBAMEA,EAASC,MANX,kEASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,gGAAkCF,EAAlC,EAAkCA,QACjCC,EAAU,IAAIL,gBAAgB,CAClCT,QAAAA,EACAK,SAAUA,IAHP,SAKkBN,IAAAA,IAAA,UAClBI,EADkB,YACCU,EADD,oBACoBC,IANtC,cAKCJ,EALD,yBAQEA,EAASC,MARX,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,kGAAkCH,EAAlC,EAAkCA,QAASN,EAA3C,EAA2CA,KAC1CO,EAAU,IAAIL,gBAAgB,CAClCT,QAAAA,EACAO,KAAAA,EACAF,SAAUA,IAJP,SAMkBN,IAAAA,IAAA,UAClBI,EADkB,YACCU,EADD,oBACoBC,IAPtC,cAMCJ,EAND,yBASEA,EAASC,MATX,kEAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,kGAA6BC,EAA7B,EAA6BA,MAAOX,EAApC,EAAoCA,KACnCO,EAAU,IAAIL,gBAAgB,CAClCT,QAAAA,EACAO,KAAAA,EACAW,MAAAA,EACAb,SAAUA,IALP,SAOkBN,IAAAA,IAAA,iBAAoBI,EAApB,YAAuCW,IAPzD,cAOCJ,EAPD,yBAQEA,EAASC,MARX,kE,uFClEQ,SAASQ,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OAAO,8BAAGA,GACX,CAEDD,EAAME,UAAY,CAChBD,MAAOE,IAAAA,OAAAA,W,yFCMT,EAVkB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAA1C,SACGF,GAGN,E,SCTYO,E,QAAKC,EAAAA,GAAH,+CACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,ICgBlB,EAfkB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnB,OACE,SAAC,EAAD,UACyB,IAAtBA,EAAWC,QACVD,EAAWE,KAAI,YAAoB,IAAjBb,EAAgB,EAAhBA,GAAID,EAAY,EAAZA,MACpB,OACE,yBACE,SAAC,EAAD,CAAWA,MAAOA,EAAOC,GAAIA,KADtBA,EAIZ,KAGR,C,sECfYc,E,QAAKP,EAAAA,GAAH,kEACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMM,UAAUC,CAAtB,IACD,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,I,SCGlB,EAJc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,OAAO,SAAC,EAAD,UAAQA,GAChB,C,sDCLM,IAAMC,EAAa,CACxBC,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W,qMCKG,SAASC,IACtB,OAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAA4BF,EAAAA,EAAAA,UAASN,EAAAA,EAAAA,MAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAO9B,EAAP,KAAcmC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,iGACbX,EAAgCF,EAAAA,EAAAA,QAAvBG,EAAuBH,EAAAA,EAAAA,SAAbI,EAAaJ,EAAAA,EAAAA,SAExCU,EAAUR,GAHW,mBAMAxC,EAAAA,EAAAA,IAAW,CAAEC,KAAM,IANnB,OAMbI,EANa,OAOnB2C,EAAUP,GACVK,EAAmBzC,EAAK+C,SARL,kDAUnBJ,EAAUN,GACVO,EAAS,KAAMI,SAXI,0DAAH,qDAepBF,GACD,GAAE,CAACF,EAAUD,IAEVD,IAAWT,EAAAA,EAAAA,SACN,SAAC,IAAD,IAELS,IAAWT,EAAAA,EAAAA,UACN,SAAC,IAAD,CAAOxB,MAAOA,IAEnBiC,IAAWT,EAAAA,EAAAA,UAEX,iCACE,SAAC,IAAD,CAAKgB,GAAI,EAAGC,GAAI,EAAhB,UACE,SAAC,IAAD,gCAEF,SAAC,IAAD,CAAW1B,WAAYgB,YAN7B,CAUD,C","sources":["api/fetchTheMovieDB.js","components/Error/Error.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","constants/statusList.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst api_key = '6d25a4756e0ff1ccca3eba13a74efa5c';\n\nexport const IMG_PATH_W300 = 'https://image.tmdb.org/t/p/w300';\nexport const IMG_PATH_W200 = 'https://image.tmdb.org/t/p/w200';\n\nconst mediaType = {\n  ALL: 'all',\n  MOVIE: 'movie',\n  TV: 'tv',\n  PERSON: 'person',\n};\nconst trendTime = {\n  DAY: 'day',\n  WEEK: 'week',\n};\nconst language = {\n  ENGLISH: 'en-US',\n  UKRAINIAN: 'uk-UA',\n};\n\nexport async function fetchTrend({ page }) {\n  const searchParams = new URLSearchParams({\n    api_key,\n    page,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(\n    `trending/${mediaType.MOVIE}/${trendTime.DAY}?${searchParams}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById({ movieId }) {\n  const options = new URLSearchParams({\n    api_key,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(`${mediaType.MOVIE}/${movieId}?${options}`);\n  return response.data;\n}\n\nexport async function fetchCreditsById({ movieId }) {\n  const options = new URLSearchParams({\n    api_key,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(\n    `${mediaType.MOVIE}/${movieId}/credits?${options}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviewsById({ movieId, page }) {\n  const options = new URLSearchParams({\n    api_key,\n    page,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(\n    `${mediaType.MOVIE}/${movieId}/reviews?${options}`\n  );\n  return response.data;\n}\n\nexport async function fetchSearch({ query, page }) {\n  const options = new URLSearchParams({\n    api_key,\n    page,\n    query,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(`search/${mediaType.MOVIE}?${options}`);\n  return response.data;\n}\n","import PropTypes from 'prop-types';\n\nexport default function Error({ error }) {\n  return <>{error}</>;\n}\n\nError.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieItem = ({ title, id }) => {\n  const location = useLocation();\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      {title}\n    </Link>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  margin-left: ${p => p.theme.space[5]}px;\n`;\n","import PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\nimport * as SC from './MovieList.styled';\n\nconst MovieList = ({ moviesData }) => {\n  return (\n    <SC.Ul>\n      {moviesData.length !== 0 &&\n        moviesData.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <MovieItem title={title} id={id} />\n            </li>\n          );\n        })}\n    </SC.Ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  moviesData: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const H1 = styled.h1`\n  line-height: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n","import PropTypes from 'prop-types';\nimport * as SC from './Title.styled';\n\nconst Title = ({ children }) => {\n  return <SC.H1>{children}</SC.H1>;\n};\n\nexport default Title;\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n","export const statusList = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import MovieList from 'components/MovieList';\nimport Title from 'components/Title';\nimport Error from 'components/Error';\nimport Loader from 'components/Loader';\nimport { Box } from 'common/Box';\nimport { fetchTrend } from 'api/fetchTheMovieDB';\nimport { useState, useEffect } from 'react';\nimport { statusList } from 'constants';\n\nexport default function Home() {\n  const [moviesDataTrend, setMoviesDataTrend] = useState([]);\n  const [status, setStatus] = useState(statusList.IDLE);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getMoviesTrend = async () => {\n      const { PENDING, RESOLVED, REJECTED } = statusList;\n\n      setStatus(PENDING);\n\n      try {\n        const data = await fetchTrend({ page: 1 });\n        setStatus(RESOLVED);\n        setMoviesDataTrend(data.results);\n      } catch (error) {\n        setStatus(REJECTED);\n        setError(error.message);\n      }\n    };\n\n    getMoviesTrend();\n  }, [setError, setStatus]);\n\n  if (status === statusList.PENDING) {\n    return <Loader />;\n  }\n  if (status === statusList.REJECTED) {\n    return <Error error={error} />;\n  }\n  if (status === statusList.RESOLVED) {\n    return (\n      <>\n        <Box pt={4} pb={5}>\n          <Title>Trending today</Title>\n        </Box>\n        <MovieList moviesData={moviesDataTrend} />\n      </>\n    );\n  }\n}\n"],"names":["axios","api_key","IMG_PATH_W300","IMG_PATH_W200","mediaType","trendTime","language","fetchTrend","page","searchParams","URLSearchParams","response","data","fetchMovieById","movieId","options","fetchCreditsById","fetchReviewsById","fetchSearch","query","Error","error","propTypes","PropTypes","title","id","location","useLocation","to","state","from","Ul","styled","p","theme","space","moviesData","length","map","H1","fontSizes","l","fontWeights","medium","children","statusList","IDLE","PENDING","RESOLVED","REJECTED","Home","useState","moviesDataTrend","setMoviesDataTrend","status","setStatus","setError","useEffect","getMoviesTrend","results","message","pt","pb"],"sourceRoot":""}