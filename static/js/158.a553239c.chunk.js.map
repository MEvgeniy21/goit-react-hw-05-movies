{"version":3,"file":"static/js/158.a553239c.chunk.js","mappings":"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","sources":["api/fetchTheMovieDB.js","components/Error/Error.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","constants/statusList.js","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst api_key = '6d25a4756e0ff1ccca3eba13a74efa5c';\n\nexport const IMG_PATH_W300 = 'https://image.tmdb.org/t/p/w300';\nexport const IMG_PATH_W200 = 'https://image.tmdb.org/t/p/w200';\n\nconst mediaType = {\n  ALL: 'all',\n  MOVIE: 'movie',\n  TV: 'tv',\n  PERSON: 'person',\n};\nconst trendTime = {\n  DAY: 'day',\n  WEEK: 'week',\n};\nconst language = {\n  ENGLISH: 'en-US',\n  UKRAINIAN: 'uk-UA',\n};\n\nexport async function fetchTrend({ page }) {\n  const searchParams = new URLSearchParams({\n    api_key,\n    page,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(\n    `trending/${mediaType.MOVIE}/${trendTime.DAY}?${searchParams}`\n  );\n  return response.data;\n}\n\nexport async function fetchMovieById({ movieId }) {\n  const options = new URLSearchParams({\n    api_key,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(`${mediaType.MOVIE}/${movieId}?${options}`);\n  return response.data;\n}\n\nexport async function fetchCreditsById({ movieId }) {\n  const options = new URLSearchParams({\n    api_key,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(\n    `${mediaType.MOVIE}/${movieId}/credits?${options}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviewsById({ movieId, page }) {\n  const options = new URLSearchParams({\n    api_key,\n    page,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(\n    `${mediaType.MOVIE}/${movieId}/reviews?${options}`\n  );\n  return response.data;\n}\n\nexport async function fetchSearch({ query, page }) {\n  const options = new URLSearchParams({\n    api_key,\n    page,\n    query,\n    language: language.ENGLISH,\n  });\n  const response = await axios.get(`search/${mediaType.MOVIE}?${options}`);\n  return response.data;\n}\n","import PropTypes from 'prop-types';\n\nexport default function Error({ error }) {\n  return <>{error}</>;\n}\n\nError.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieItem = ({ title, id }) => {\n  const location = useLocation();\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      {title}\n    </Link>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  margin-left: ${p => p.theme.space[5]}px;\n`;\n","import PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\nimport * as SC from './MovieList.styled';\n\nconst MovieList = ({ moviesData }) => {\n  return (\n    <SC.Ul>\n      {moviesData.length !== 0 &&\n        moviesData.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <MovieItem title={title} id={id} />\n            </li>\n          );\n        })}\n    </SC.Ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  moviesData: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","export const statusList = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding-top: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n`;\n","import MovieList from 'components/MovieList';\nimport Error from 'components/Error';\nimport Loader from 'components/Loader';\nimport { Box } from 'common/Box';\nimport { fetchSearch } from 'api/fetchTheMovieDB';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { statusList } from 'constants';\nimport { toast } from 'react-toastify';\nimport * as SC from './Movies.styled';\n\nconst Movies = () => {\n  const [moviesDataSearch, setMoviesDataSearch] = useState([]);\n  const [status, setStatus] = useState(statusList.IDLE);\n  const [error, setError] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getMoviesSearch = async () => {\n      const { PENDING, RESOLVED, REJECTED } = statusList;\n\n      if (query.length < 3) {\n        return;\n      }\n\n      setStatus(PENDING);\n\n      try {\n        const data = await fetchSearch({ query, page: 1 });\n        setStatus(RESOLVED);\n        setMoviesDataSearch(data.results);\n        if (!data.total_results) {\n          toast.info(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          setSearchParams();\n        } else {\n          // toast.success(`Hooray! We found ${data.total_results} movies.`);\n        }\n      } catch (error) {\n        setStatus(REJECTED);\n        setError(error.message);\n      }\n    };\n\n    getMoviesSearch();\n  }, [query, setError, setStatus, setSearchParams]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const searchQuery = form.elements.query.value.trim().toLowerCase();\n    if (searchQuery.length > 2) {\n      setSearchParams({ query: searchQuery });\n    } else {\n      toast.warning('Few characters to search');\n      setSearchParams();\n    }\n  };\n\n  const { PENDING, RESOLVED, REJECTED } = statusList;\n  return (\n    <Box ml={2} mt={6}>\n      <SC.Form onSubmit={handleSubmit}>\n        <SC.Input type=\"text\" name=\"query\" defaultValue={query} />\n        <button type=\"submit\" disabled={status === PENDING}>\n          Search\n        </button>\n      </SC.Form>\n      {status === PENDING && <Loader />}\n      {status === REJECTED && <Error error={error} />}\n      {status === RESOLVED && <MovieList moviesData={moviesDataSearch} />}\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","api_key","IMG_PATH_W300","IMG_PATH_W200","mediaType","trendTime","language","fetchTrend","page","searchParams","URLSearchParams","response","data","fetchMovieById","movieId","options","fetchCreditsById","fetchReviewsById","fetchSearch","query","Error","error","propTypes","PropTypes","title","id","location","useLocation","to","state","from","Ul","styled","p","theme","space","moviesData","length","map","statusList","IDLE","PENDING","RESOLVED","REJECTED","Form","Input","useState","moviesDataSearch","setMoviesDataSearch","status","setStatus","setError","useSearchParams","setSearchParams","get","useEffect","getMoviesSearch","results","total_results","toast","message","Box","ml","mt","onSubmit","evt","preventDefault","searchQuery","currentTarget","elements","value","trim","toLowerCase","type","name","defaultValue","disabled","Loader","MovieList"],"sourceRoot":""}